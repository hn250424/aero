import { default as BaseAeroShadowComponent } from './BaseAeroShadowComponent';
export default abstract class BaseAeroResizeBox extends BaseAeroShadowComponent {
    private _topResizer;
    private _bottomResizer;
    private _leftResizer;
    private _rightResizer;
    private _hasTopResizer;
    private _hasBottomResizer;
    private _hasLeftResizer;
    private _hasRightResizer;
    private _nMinWidth;
    private _nMaxWidth;
    private _nMinHeight;
    private _nMaxHeight;
    private isTopDragging;
    private isBottomDragging;
    private isLeftDragging;
    private isRightDragging;
    private isDragging;
    private animationFrameId;
    private resizerHandlers;
    protected constructor(htmlTemplate: string);
    private processMousedownEvent;
    static get observedAttributes(): string[];
    attributeChangedCallback(name: string, _oldValue: string | null, newValue: string | null): void;
    private attributeHandlers;
    private updateTopResizerState;
    private updateBottomResizerState;
    private updateLeftResizerState;
    private updateRightResizerState;
    private updateMinWidthValue;
    private updateMaxWidthValue;
    private updateMinHeightValue;
    private updateMaxHeightValue;
    set resizerColor(color: string);
    get minWidth(): string;
    set minWidth(val: string);
    get maxWidth(): string;
    set maxWidth(val: string);
    get minHeight(): string;
    set minHeight(val: string);
    get maxHeight(): string;
    set maxHeight(val: string);
    addTopResizer(): void;
    removeTopResizer(): void;
    addBottomResizer(): void;
    removeBottomResizer(): void;
    addLeftResizer(): void;
    removeLeftResizer(): void;
    addRightResizer(): void;
    removeRightResizer(): void;
}
